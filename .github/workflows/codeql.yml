name: "CodeQL Advanced Security Scan"

on:
  push:
    branches: [ "main", "staging" ]  # Runs on pushes to main and staging branches
  pull_request:
    branches: [ "main", "staging" ]  # Runs on PRs targeting main and staging branches
  schedule:
    - cron: '25 15 * * 1'  # Scheduled weekly scan on Mondays at 3:25 PM UTC

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write  # Needed to upload SARIF reports for security findings
      packages: read          # Allow read access to internal or private CodeQL packs
      actions: read           # Access to actions for private repos
      contents: read          # Read access to the repository contents

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: javascript-typescript
            build-mode: none    # You can specify build steps if needed
          - language: python
            build-mode: none    # Adjust if a manual build is required (e.g., `manual` mode)

    steps:
      # Step 1: Checkout the repository to get the latest code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Initialize CodeQL tools for scanning
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}

      # Step 3: If the build mode is manual (i.e., for compiled languages), insert a build command here
      - if: matrix.build-mode == 'manual'
        shell: bash
        run: |
          echo 'If using "manual" build mode, replace with build commands, e.g.:'
          echo '  make bootstrap'
          echo '  make release'
          exit 1

      # Step 4: Run the CodeQL analysis
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
